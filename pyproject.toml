[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dotz"
version = "0.4.0"
description = "A fully featured, Git-backed dotfiles manager for Linux"
authors = ["Moustafa Salem <salemmoustafa442@gmail.com>"]
license = "GPL-3.0-or-later"
readme = "README.md"
homepage = "https://github.com/tTrmc/dotz"
repository = "https://github.com/tTrmc/dotz"
documentation = "https://github.com/tTrmc/dotz#readme"
keywords = ["dotfiles", "git", "configuration", "linux", "symlink", "backup", "dotz"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Archiving :: Backup",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
packages = [{include = "dotz", from = "src"}]
include = ["src/dotz/py.typed"]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
typer = "*"
gitpython = "*"
watchdog = "*"
PySide6 = {version = ">=6.5.0", optional = true}

[tool.poetry.group.test.dependencies]
pytest = ">=7.4.0"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.1.0"
pytest-mock = "^3.11.1"
pytest-qt = "^4.2.0"
pytest-xdist = "^3.3.1"
pytest-benchmark = "^4.0.0"
hypothesis = "^6.82.0"
faker = "^19.2.0"
factory-boy = "^3.3.0"
responses = "^0.23.3"
freezegun = "^1.2.2"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.1.0"
pytest-mock = "^3.11.1"
pytest-qt = "^4.2.0"
pytest-xdist = "^3.3.1"
pytest-benchmark = "^4.0.0"
hypothesis = "^6.82.0"
faker = "^19.2.0"
factory-boy = "^3.3.0"
responses = "^0.23.3"
freezegun = "^1.2.2"
black = "*"
isort = "*"
flake8 = "*"

[tool.poetry.group.maintainer.dependencies]
mypy = "*"
bandit = {extras = ["toml"], version = "*"}
pydocstyle = "*"
flake8-docstrings = "*"
flake8-bugbear = "*"
flake8-comprehensions = "*"
build = "*"
twine = "*"

[tool.poetry.extras]
gui = ["PySide6"]

[tool.poetry.scripts]
dotz = "dotz.cli:app"
dotz-gui = "dotz.gui.main:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--timeout=60",
    "--timeout-method=thread",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gui: marks tests as GUI tests requiring display",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
minversion = "7.0"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
# More relaxed mypy settings for contributors
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_errors = true  # Allow contributors to ignore type issues

[[tool.mypy.overrides]]
module = [
    "git.*",
    "watchdog.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "dotz.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101"]  # Skip assert_used test

[tool.pydocstyle]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107", "D200", "D205", "D400", "D401"]
